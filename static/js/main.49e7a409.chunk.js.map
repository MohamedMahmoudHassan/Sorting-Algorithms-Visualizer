{"version":3,"sources":["components/arrayBar.jsx","components/visualizationButton.jsx","components/slider.jsx","components/visualizationControlBar.jsx","components/arrayVisualizer.jsx","components/navBar.jsx","components/actionButton.jsx","components/sectionTitle.jsx","components/input.jsx","components/select.jsx","Util/algorithmsLists.js","components/arrayControlBar.jsx","components/sortControlBar.jsx","components/controlBar.jsx","Util/shuffleArray.js","Util/Algorithms/Generator/random.js","Util/Algorithms/Generator/reversed.js","Util/Algorithms/Generator/nearlySorted.js","Util/generateElements.js","Util/getSortStep.js","Util/Algorithms/Sorting/mergeSort.js","Util/sortWithSteps.js","Util/Algorithms/Sorting/bubbleSort.js","Util/Algorithms/Sorting/selectionSort.js","Util/Algorithms/Sorting/insertionSort.js","Util/Algorithms/Sorting/heapSort.js","Util/getFirstStep.js","App.js","index.js"],"names":["ArrayBar","element","maxValue","barsNumber","colorsSchema","style","width","Math","max","height","value","marginTop","marginLeft","textAlign","color","fontSize","backgroundColor","isInComparison","isInSwap","VisualizationButton","props","state","handleMouseEnter","setState","handleMouseOut","this","size","role","handleClick","rest","className","onClick","onMouseOut","onMouseEnter","Component","Slider","handleUpdate","range","min","start","connect","step","onUpdate","values","VisualizationControlBar","runSort","pauseSort","applySortStep","updateSortInterval","recoverArray","isSorting","title","ArrayVisualizer","elements","isBeforeSort","margin","map","index","length","key","Fragment","NavBar","ActionButton","label","disabled","SectionTitle","Input","Select","name","options","currentOption","onChange","item","id","type","checked","htmlFor","sortAlgorithmsList","_id","initialOrdersList","ArrayControlBar","generateNewArray","changeArrayLength","changeArrayInitialOrder","SortControlBar","startSort","changeSortAlgorithm","ControlBar","currentOrder","currentAlgorithm","shuffleArray","arr","prob","i","randProb","random","randIndex","floor","push","reversed","sort","a","b","nearlySorted","generateElements","initialOrder","getSortStep","originalArr","operation","elementsInOperation","JSON","parse","stringify","forEach","MergeSortArray","merge","st1","en1","st2","en2","swapIds","mergeArr","id1","id2","sortSteps","mergeSort","st","en","mid","sortWithSteps","algorithm","j","bubbleSort","minIndex","selectionSort","toInsert","insertionSort","heapSort","getFirstStep","slice","App","array","currentStepId","status","sortInterval","sortAlgorithm","updateArrayState","arrayState","isWithRest","Object","keys","firstStep","mapSliderToInterval","sliderValue","arrayElements","changeArrayProp","input","currentTarget","changeSortProp","prevProp","prevState","clearInterval","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49e7a409.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ArrayBar = ({ element, maxValue, barsNumber }) => {\r\n  const colorsSchema = {\r\n    normal: \"#f5365c\",\r\n    isInComparison: \"#32325d\",\r\n    isInSwap: \"#2dce89\"\r\n  };\r\n\r\n  const style = {\r\n    width: 950 / Math.max(barsNumber, 8) - 2,\r\n    height: element.value,\r\n    marginTop: maxValue - element.value - 3,\r\n    marginLeft: 2,\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 400 / Math.max(barsNumber, 8),\r\n    backgroundColor:\r\n      element.isInComparison === true\r\n        ? colorsSchema.isInComparison\r\n        : element.isInSwap === true\r\n        ? colorsSchema.isInSwap\r\n        : colorsSchema.normal\r\n  };\r\n\r\n  return <div style={style}>{element.value - 59}</div>;\r\n};\r\n\r\nexport default ArrayBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass VisualizationButton extends Component {\r\n  state = { color: \"\" };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { style: { color: \"#172b4d\" } };\r\n  }\r\n\r\n  handleMouseEnter = () => {\r\n    this.setState({ style: { color: \"#f5365c\" } });\r\n  };\r\n\r\n  handleMouseOut = () => {\r\n    this.setState({ style: { color: \"#172b4d\" } });\r\n  };\r\n\r\n  render() {\r\n    const { size, role, handleClick, ...rest } = this.props;\r\n    return (\r\n      <span\r\n        className={`fa-stack fa-lg fa-${size}x`}\r\n        onClick={handleClick}\r\n        onMouseOut={this.handleMouseOut}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        {...rest}\r\n      >\r\n        <i className={`fa fa-circle fa-stack-2x `} style={this.state.style} />\r\n        <i className={`fa fa-${role} fa-stack-1x`} style={{ color: \"white\" }} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizationButton;\r\n","import React from \"react\";\r\nimport Nouislider from \"nouislider-react\";\r\n\r\nconst Slider = ({ handleUpdate, color, ...rest }) => {\r\n  return (\r\n    <Nouislider\r\n      className={`input-slider--${color} .noUi-connect`}\r\n      style={{ width: 150, marginTop: 30 }}\r\n      range={{ min: 0, max: 100 }}\r\n      start={[50]}\r\n      connect={[true, false]}\r\n      step={1}\r\n      onUpdate={values => handleUpdate(values[0])}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport VisualizationButton from \"./visualizationButton\";\r\nimport Slider from \"./slider\";\r\n\r\nconst VisualizationControlBar = ({\r\n  runSort,\r\n  pauseSort,\r\n  applySortStep,\r\n  updateSortInterval,\r\n  recoverArray,\r\n  isSorting\r\n}) => {\r\n  return (\r\n    <div className=\"py-1 bg-default\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Slider title=\"sortSpeed\" handleUpdate={updateSortInterval} color=\"red\"/>\r\n          <div className=\"mt-4 mt-md-0 col-md-auto\">\r\n            <VisualizationButton\r\n              handleClick={() => applySortStep(\"backward\")}\r\n              role=\"step-backward\"\r\n              size={1}\r\n              title=\"Previous Step\"\r\n            />\r\n            <VisualizationButton\r\n              handleClick={isSorting ? pauseSort : runSort}\r\n              role={isSorting ? \"pause\" : \"play\"}\r\n              size={2}\r\n              title=\"Run\"\r\n            />\r\n            <VisualizationButton\r\n              handleClick={() => applySortStep(\"forward\")}\r\n              role=\"step-forward\"\r\n              size={1}\r\n              title=\"Next Step\"\r\n            />\r\n            <VisualizationButton\r\n              handleClick={recoverArray}\r\n              role=\"stop\"\r\n              size={1}\r\n              title=\"Exit & Recover Array\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationControlBar;\r\n","import React from \"react\";\r\nimport ArrayBar from \"./arrayBar\";\r\nimport VisualizationControlBar from \"./visualizationControlBar\";\r\n\r\nconst ArrayVisualizer = ({\r\n  elements,\r\n  runSort,\r\n  pauseSort,\r\n  applySortStep,\r\n  updateSortInterval,\r\n  recoverArray,\r\n  isSorting,\r\n  isBeforeSort\r\n}) => {\r\n  const style = { width: 1000, height: 500, margin: \"auto\" };\r\n  return (\r\n    <div>\r\n      <div className=\"row\" style={style}>\r\n        <div className=\"row\" style={{ margin: \"auto\" }}>\r\n          {elements.map((element, index) => (\r\n            <ArrayBar maxValue={500} element={element} barsNumber={elements.length} key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {isBeforeSort ? (\r\n        <VisualizationControlBar\r\n          runSort={runSort}\r\n          pauseSort={pauseSort}\r\n          applySortStep={applySortStep}\r\n          updateSortInterval={updateSortInterval}\r\n          recoverArray={recoverArray}\r\n          isSorting={isSorting}\r\n        />\r\n      ) : (\r\n        <React.Fragment />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayVisualizer;\r\n","import React from \"react\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar-dark bg-default navbar navbar-expand-lg shadow\">\r\n        <div className=\"navbar-brand\" style={{ fontSize: 20, margin:\"auto\" }}>\r\n          Sorting Algorithms Visualizer\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst ActionButton = ({ handleClick, label, isSorting, ...rest }) => {\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <button className=\"btn btn-primary\" onClick={handleClick} {...rest} disabled={isSorting}>\r\n        {label}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from \"react\";\r\n\r\nconst SectionTitle = ({ label }) => {\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <small className=\"text-uppercase font-weight-bold\">{label}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from \"react\";\r\nimport Slider from \"./slider\";\r\nimport SectionTitle from \"./sectionTitle\";\r\n\r\nconst Input = ({ label, handleUpdate, isSorting }) => {\r\n  return (\r\n    <div className=\"col-sm-6 col-lg-2\">\r\n      <SectionTitle label={label} />\r\n      <Slider handleUpdate={handleUpdate} disabled={isSorting} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport SectionTitle from \"./sectionTitle\";\r\n\r\nconst Select = ({ name, label, options, currentOption, onChange, isSorting }) => {\r\n  return (\r\n    <div className=\"mt-4 mt-md-0 col-md-auto\">\r\n      <SectionTitle label={label} />\r\n      {options.map(item => (\r\n        <div className=\"custom-control custom-control-inline custom-radio mb-3\" key={item.name}>\r\n          <input\r\n            className=\"custom-control-input\"\r\n            id={item.name}\r\n            value={item.name}\r\n            name={name}\r\n            type=\"radio\"\r\n            checked={item.name === currentOption}\r\n            onChange={onChange}\r\n            disabled={isSorting || item.disabled}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor={item.name}>\r\n            {item.name}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","export const sortAlgorithmsList = [\r\n  { _id: 0, name: \"Bubble Sort\" },\r\n  { _id: 1, name: \"Selection Sort\" },\r\n  { _id: 2, name: \"Insertion Sort\" },\r\n  { _id: 3, name: \"Merge Sort\" },\r\n  { _id: 4, name: \"Quick Sort\", disabled: true },\r\n  { _id: 5, name: \"Heap Sort\", disabled: true }\r\n];\r\n\r\nexport const initialOrdersList = [\r\n  { _id: 0, name: \"Random\" },\r\n  { _id: 1, name: \"Reversed\" },\r\n  { _id: 2, name: \"Nearly Sorted\" }\r\n];\r\n","import React from \"react\";\r\nimport ActionButton from \"./actionButton\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport { initialOrdersList } from \"./../Util/algorithmsLists\";\r\n\r\nconst ArrayControlBar = ({\r\n  generateNewArray,\r\n  changeArrayLength,\r\n  changeArrayInitialOrder,\r\n  currentOption,\r\n  isSorting\r\n}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <Input label=\"Array Length\" handleUpdate={changeArrayLength} isSorting={isSorting} />\r\n      <Select\r\n        name=\"initialOrder\"\r\n        label=\"Array Initial Order\"\r\n        options={initialOrdersList}\r\n        onChange={changeArrayInitialOrder}\r\n        currentOption={currentOption}\r\n        isSorting={isSorting}\r\n      />\r\n      <ActionButton\r\n        label=\"Generate New Array\"\r\n        handleClick={generateNewArray}\r\n        isSorting={isSorting}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayControlBar;\r\n","import React from \"react\";\r\nimport ActionButton from \"./actionButton\";\r\nimport Select from \"./select\";\r\nimport { sortAlgorithmsList } from \"../Util/algorithmsLists\";\r\n\r\nconst SortControlBar = ({ startSort, changeSortAlgorithm, currentOption, isSorting }) => {\r\n  return (\r\n    <div className=\"row\" style={{ marginTop: 20 }}>\r\n      <Select\r\n        name=\"sortAlgorithm\"\r\n        label=\"Sort Algorithm\"\r\n        options={sortAlgorithmsList}\r\n        onChange={changeSortAlgorithm}\r\n        currentOption={currentOption}\r\n        isSorting={isSorting}\r\n      />\r\n      <ActionButton label=\"Sort\" handleClick={startSort} isSorting={isSorting} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortControlBar;\r\n","import React from \"react\";\r\nimport ArrayControlBar from \"./arrayControlBar\";\r\nimport SortControlBar from \"./sortControlBar\";\r\n\r\nconst ControlBar = ({\r\n  generateNewArray,\r\n  changeArrayLength,\r\n  changeArrayInitialOrder,\r\n  currentOrder,\r\n  startSort,\r\n  changeSortAlgorithm,\r\n  currentAlgorithm,\r\n  isSorting\r\n}) => {\r\n  return (\r\n    <div className=\"py-5 bg-secondary\">\r\n      <div className=\"container\">\r\n        <ArrayControlBar\r\n          generateNewArray={generateNewArray}\r\n          changeArrayLength={changeArrayLength}\r\n          changeArrayInitialOrder={changeArrayInitialOrder}\r\n          currentOption={currentOrder}\r\n          isSorting={isSorting}\r\n        />\r\n        <SortControlBar\r\n          startSort={startSort}\r\n          changeSortAlgorithm={changeSortAlgorithm}\r\n          currentOption={currentAlgorithm}\r\n          isSorting={isSorting}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlBar;\r\n","export default function shuffleArray(arr, prob = 1) {\r\n  const length = arr.length;\r\n  for (var i = 0; i < length; i++) {\r\n    const randProb = Math.random();\r\n    if (randProb <= prob) {\r\n      const randIndex = Math.floor(Math.random() * (length - 1 - i)) + i;\r\n      [arr[i], arr[randIndex]] = [arr[randIndex], arr[i]];\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n","import shuffleArray from \"./../../shuffleArray\";\r\n\r\nexport default function random(length, min, max, arr) {\r\n  if (!arr) {\r\n    let values = [];\r\n    while (length--) {\r\n      values.push({\r\n        value: Math.floor(Math.random() * (max - min)) + min,\r\n        isInComparison: false,\r\n        isInSwap: false\r\n      });\r\n    }\r\n    arr = values;\r\n  }\r\n  return shuffleArray(arr);\r\n}\r\n","import random from \"./random\";\r\n\r\nexport default function reversed(length, min, max, arr) {\r\n  if (!arr) arr = random(length, min, max);\r\n  arr.sort(function(a, b) {\r\n    return b.value - a.value;\r\n  });\r\n  return arr;\r\n}\r\n","import random from \"./random\";\r\nimport shuffleArray from \"./../../shuffleArray\";\r\n\r\nexport default function nearlySorted(length, min, max, arr) {\r\n  if (!arr) arr = random(length, min, max);\r\n\r\n  arr.sort(function(a, b) {\r\n    return a.value - b.value;\r\n  });\r\n\r\n  return shuffleArray(arr, 0.15);\r\n}\r\n","import random from \"./Algorithms/Generator/random\";\r\nimport reversed from \"./Algorithms/Generator/reversed\";\r\nimport nearlySorted from \"./Algorithms/Generator/nearlySorted\";\r\n\r\nexport default function generateElements(initialOrder, length = 105, min = 60, max = 450) {\r\n  if (initialOrder === \"Random\") return random(length, min, max);\r\n  if (initialOrder === \"Reversed\") return reversed(length, min, max);\r\n  if (initialOrder === \"Nearly Sorted\") return nearlySorted(length, min, max);\r\n}\r\n","export default function getSortStep(originalArr, operation, elementsInOperation) {\r\n  const arr = JSON.parse(JSON.stringify(originalArr));\r\n\r\n  elementsInOperation.forEach(id => {\r\n    if (operation === \"compare\") arr[id].isInComparison = true;\r\n    else arr[id].isInSwap = true;\r\n  });\r\n\r\n  return arr;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nclass MergeSortArray {\r\n  constructor(arr) {\r\n    this.arr = arr;\r\n    this.sortSteps = [];\r\n  }\r\n\r\n  merge = function(st1, en1, st2, en2) {\r\n    const arr = this.arr;\r\n    let swapIds = [];\r\n    let mergeArr = [...arr];\r\n    let id = st1;\r\n    let id1 = st1;\r\n    let id2 = st2;\r\n\r\n    for (var i = st1; i <= en2; i++) swapIds.push(i);\r\n\r\n    while (id1 <= en1 && id2 <= en2) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id1, id2]));\r\n      if (arr[id1].value <= arr[id2].value) mergeArr[id++] = arr[id1++];\r\n      else mergeArr[id++] = arr[id2++];\r\n    }\r\n    while (id1 <= en1) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id1]));\r\n      mergeArr[id++] = arr[id1++];\r\n    }\r\n    while (id2 <= en2) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id2]));\r\n      mergeArr[id++] = arr[id2++];\r\n    }\r\n\r\n    this.arr = [...mergeArr];\r\n    this.sortSteps.push(getSortStep(this.arr, \"sort\", swapIds));\r\n  };\r\n\r\n  mergeSort = function(st, en) {\r\n    const mid = Math.floor((st + en) / 2);\r\n    if (st < en) {\r\n      this.mergeSort(st, mid);\r\n      this.mergeSort(mid + 1, en);\r\n      this.merge(st, mid, mid + 1, en);\r\n    }\r\n  };\r\n}\r\n\r\nexport default function mergeSort(arr) {\r\n  const mergeArr = new MergeSortArray(arr);\r\n  mergeArr.mergeSort(0, arr.length - 1);\r\n  return [...mergeArr.sortSteps, mergeArr.arr];\r\n}\r\n","import bubbleSort from \"./Algorithms/Sorting/bubbleSort\";\r\nimport selectionSort from \"./Algorithms/Sorting/selectionSort\";\r\nimport mergeSort from \"./Algorithms/Sorting/mergeSort\";\r\nimport insertionSort from \"./Algorithms/Sorting/insertionSort\";\r\nimport quickSort from \"./Algorithms/Sorting/quickSort\";\r\nimport heapSort from \"./Algorithms/Sorting/heapSort\";\r\n\r\nexport default function sortWithSteps(arr, algorithm) {\r\n  switch (algorithm) {\r\n    case \"Bubble Sort\":\r\n      return bubbleSort(arr);\r\n    case \"Selection Sort\":\r\n      return selectionSort(arr);\r\n    case \"Insertion Sort\":\r\n      return insertionSort(arr);\r\n    case \"Merge Sort\":\r\n      return mergeSort(arr);\r\n    case \"Quick Sort\":\r\n      return quickSort(arr);\r\n    case \"Heap Sort\":\r\n      return heapSort(arr);\r\n    default:\r\n      return arr;\r\n  }\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function bubbleSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n\r\n  for (var i = 0; i < length - 1; i++) {\r\n    for (var j = 0; j < length - i - 1; j++) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [j, j + 1]));\r\n      if (arr[j + 1].value < arr[j].value) {\r\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\r\n        sortSteps.push(getSortStep(arr, \"swap\", [j, j + 1]));\r\n      }\r\n    }\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function selectionSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n  let minIndex;\r\n\r\n  for (var i = 0; i < length - 1; i++) {\r\n    minIndex = i;\r\n    for (var j = i + 1; j < length; j++) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [minIndex, j]));\r\n      if (arr[j].value < arr[minIndex].value) minIndex = j;\r\n    }\r\n    [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]];\r\n    sortSteps.push(getSortStep(arr, \"swap\", [i, minIndex]));\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function insertionSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n\r\n  for (var i = 1; i < length; i++) {\r\n    let swapIds = [];\r\n    let j = i - 1;\r\n    const toInsert = arr[i];\r\n    swapIds.push(i);\r\n\r\n    while (j >= 0) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [i, j]));\r\n      if (arr[j].value <= toInsert.value) break;\r\n      swapIds.push(j);\r\n      j--;\r\n    }\r\n    j = i - 1;\r\n    while (j >= 0 && arr[j].value > toInsert.value) arr[j + 1] = arr[j--];\r\n    arr[j + 1] = toInsert;\r\n\r\n    sortSteps.push(getSortStep(arr, \"sort\", swapIds));\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","export default function heapSort(arr) {\r\n  return [arr];\r\n}\r\n","export default function getFirstStep(arr, length) {\r\n  return [arr.slice(0, length)];\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ArrayVisualizer from \"./components/arrayVisualizer\";\r\nimport NavBar from \"./components/navBar\";\r\nimport ControlBar from \"./components/controlBar\";\r\nimport generateElements from \"./Util/generateElements\";\r\nimport sortWithSteps from \"./Util/sortWithSteps\";\r\nimport getFirstStep from \"./Util/getFirstStep\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    array: {\r\n      elements: [],\r\n      sortSteps: [],\r\n      currentStepId: 0,\r\n      status: \"\",\r\n      length: 0,\r\n      initialOrder: \"\"\r\n    },\r\n    sortInterval: 0,\r\n    sortAlgorithm: \"\"\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const length = 50;\r\n    const initialOrder = \"Random\";\r\n    const arrayElements = generateElements(initialOrder);\r\n    this.state = {\r\n      array: {\r\n        elements: arrayElements,\r\n        status: \"unsorted\",\r\n        currentStepId: 0,\r\n        sortSteps: getFirstStep(arrayElements, length),\r\n        length,\r\n        initialOrder\r\n      },\r\n      sortInterval: this.mapSliderToInterval(50),\r\n      sortAlgorithm: \"Bubble Sort\"\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProp, prevState) {\r\n    clearInterval(this.sortInterval);\r\n    if (this.state.array.initialOrder !== prevState.array.initialOrder) this.generateNewArray();\r\n    if (this.state.array.status === \"sorting\")\r\n      this.sortInterval = setInterval(() => {\r\n        this.applySortStep(\"forward\");\r\n      }, this.state.sortInterval);\r\n  }\r\n\r\n  updateArrayState = (arrayState, isWithRest) => {\r\n    const array = { ...this.state.array };\r\n    Object.keys(arrayState).forEach(key => (array[key] = arrayState[key]));\r\n    if (isWithRest) {\r\n      array.status = \"unsorted\";\r\n      array.currentStepId = 0;\r\n      array.sortSteps = getFirstStep(array.elements, array.length);\r\n    }\r\n    this.setState({ array });\r\n  };\r\n\r\n  applySortStep = type => {\r\n    const array = { ...this.state.array };\r\n    let { sortSteps, currentStepId, status } = array;\r\n    if (status === \"unsorted\") return;\r\n\r\n    if (type === \"forward\") {\r\n      if (currentStepId + 1 === sortSteps.length) status = \"sorted\";\r\n      else currentStepId++;\r\n    } else if (currentStepId - 1 >= 0) {\r\n      currentStepId--;\r\n      status = \"pausedSorting\";\r\n    }\r\n\r\n    this.updateArrayState({ status, currentStepId });\r\n  };\r\n\r\n  startSort = () => {\r\n    const array = { ...this.state.array };\r\n    const { sortSteps, status } = array;\r\n    const firstStep = sortSteps[0];\r\n    if (status === \"unsorted\") {\r\n      const sortSteps = [firstStep, ...sortWithSteps([...firstStep], this.state.sortAlgorithm)];\r\n      this.updateArrayState({ status: \"pausedSorting\", sortSteps });\r\n    }\r\n  };\r\n\r\n  runSort = () => {\r\n    const array = { ...this.state.array };\r\n    if (array.status === \"pausedSorting\") this.updateArrayState({ status: \"sorting\" });\r\n  };\r\n\r\n  pauseSort = () => {\r\n    this.updateArrayState({ status: \"pausedSorting\" });\r\n  };\r\n\r\n  mapSliderToInterval = sliderValue => {\r\n    return (100 - sliderValue) * 5;\r\n  };\r\n\r\n  updateSortInterval = sliderValue => {\r\n    const sortInterval = this.mapSliderToInterval(sliderValue);\r\n    this.setState({ sortInterval });\r\n  };\r\n\r\n  recoverArray = () => {\r\n    this.updateArrayState({}, true);\r\n  };\r\n\r\n  generateNewArray = () => {\r\n    const array = { ...this.state.array };\r\n    const arrayElements = generateElements(array.initialOrder);\r\n    this.updateArrayState({ elements: arrayElements }, true);\r\n  };\r\n\r\n  changeArrayProp = ({ currentTarget: input }) => {\r\n    const array = { ...this.state.array };\r\n    array[input.name] = input.value;\r\n    this.setState({ array });\r\n  };\r\n\r\n  changeArrayLength = value => {\r\n    const array = { ...this.state.array };\r\n    let { status, length } = array;\r\n    length = Math.max(value, 1);\r\n\r\n    if (status === \"unsorted\") {\r\n      this.updateArrayState({ length }, true);\r\n    } else this.updateArrayState({ length });\r\n  };\r\n\r\n  changeSortProp = ({ currentTarget: input }) => {\r\n    const state = { ...this.state };\r\n    state[input.name] = input.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    const { sortAlgorithm, array } = this.state;\r\n    const { initialOrder } = array;\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <ArrayVisualizer\r\n          elements={array.sortSteps[array.currentStepId]}\r\n          runSort={this.runSort}\r\n          pauseSort={this.pauseSort}\r\n          applySortStep={this.applySortStep}\r\n          updateSortInterval={this.updateSortInterval}\r\n          recoverArray={this.recoverArray}\r\n          isSorting={array.status === \"sorting\"}\r\n          isBeforeSort={array.status !== \"unsorted\"}\r\n        />\r\n        <ControlBar\r\n          generateNewArray={this.generateNewArray}\r\n          currentOrder={initialOrder}\r\n          changeArrayLength={this.changeArrayLength}\r\n          changeArrayInitialOrder={this.changeArrayProp}\r\n          startSort={this.startSort}\r\n          changeSortAlgorithm={this.changeSortProp}\r\n          currentAlgorithm={sortAlgorithm}\r\n          isSorting={array.status === \"sorting\" || array.status === \"pausedSorting\"}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport \"./assets/css/argon-design-system-react.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}