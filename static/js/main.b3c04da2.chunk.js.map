{"version":3,"sources":["components/arrayBar.jsx","components/arrayVisualizer.jsx","components/actionButton.jsx","components/input.jsx","components/select.jsx","Util/algorithmsLists.js","components/arrayControlBar.jsx","components/sortControlBar.jsx","Util/Algorithms/Generator/random.js","Util/Algorithms/Generator/reversed.js","Util/Algorithms/Generator/nearlySorted.js","Util/shuffleArray.js","Util/generateElements.js","Util/getSortStep.js","Util/Algorithms/Sorting/mergeSort.js","Util/sortWithSteps.js","Util/Algorithms/Sorting/bubbleSort.js","Util/Algorithms/Sorting/selectionSort.js","Util/Algorithms/Sorting/insertionSort.js","App.js","index.js"],"names":["ArrayBar","element","maxValue","colorsSchema","style","width","barsNumber","height","value","marginTop","marginLeft","textAlign","backgroundColor","isInComparison","isInSwap","ArrayVisualizer","onClick","elements","className","borderWidth","borderStyle","margin","map","length","ActionButton","handleClick","label","rest","Input","name","error","htmlFor","id","key","Select","options","item","sortAlgorithmsList","_id","initialOrdersList","ArrayControlBar","arrayLength","generateNewArray","changeArrayLength","recoverArray","changeArrayInitialOrder","onChange","SortControlBar","sortInterval","handleSortStart","changeSortInterval","changeSortAlgorithm","random","min","max","values","push","Math","floor","reversed","sort","a","b","nearlySorted","arr","prob","i","randIndex","shuffleArray","generateElements","initialOrder","getSortStep","originalArr","operation","elementsInOperation","JSON","parse","stringify","forEach","MergeSortArray","merge","st1","en1","st2","en2","this","swapIds","mergeArr","id1","id2","sortSteps","mergeSort","st","en","mid","sortWithSteps","algorithm","j","bubbleSort","minIndex","selectionSort","toInsert","insertionSort","App","state","array","currentStepId","status","sortAlgorithm","updateArrayState","arrayState","Object","keys","setState","handleStatusUpdate","arrayElements","changeArrayProp","input","currentTarget","changeSortProp","clearInterval","setInterval","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c04da2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ArrayBar = ({ element, maxValue, barsNumber }) => {\r\n  const colorsSchema = {\r\n    normal: \"#F8B530\",\r\n    isInComparison: \"#68CBD0\",\r\n    isInSwap: \"#08872C\"\r\n  }\r\n\r\n  const style = {\r\n    width: 950 / barsNumber - 2,\r\n    height: element.value,\r\n    marginTop: maxValue - element.value - 3,\r\n    marginLeft: 2,\r\n    textAlign: \"center\",\r\n    backgroundColor:\r\n      element.isInComparison === true\r\n        ? colorsSchema.isInComparison\r\n        : element.isInSwap === true\r\n        ? colorsSchema.isInSwap\r\n        : colorsSchema.normal\r\n  };\r\n\r\n  return <div style={style}></div>;\r\n};\r\n\r\nexport default ArrayBar;\r\n","import React from \"react\";\r\nimport ArrayBar from \"./arrayBar\";\r\n\r\nconst ArrayVisualizer = ({ onClick, elements }) => {\r\n  const style = {\r\n    width: 1000,\r\n    height: 500,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\" style={style} onClick={onClick}>\r\n      <div className=\"row\" style={{ margin: \"auto\" }}>\r\n        {elements.map(element => (\r\n          <ArrayBar maxValue={500} element={element} barsNumber={elements.length} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayVisualizer;\r\n","import React from \"react\";\r\n\r\nconst ActionButton = ({ handleClick, label, ...rest }) => {\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={handleClick} {...rest}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ label, name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} key={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"form-control\">\r\n        {options.map(item => (\r\n          <option value={item.id} key={item.id}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","export const sortAlgorithmsList = [\r\n  { _id: 0, name: \"Bubble Sort\" },\r\n  { _id: 1, name: \"Selection Sort\" },\r\n  { _id: 2, name: \"Merge Sort\" },\r\n  { _id: 3, name: \"Insertion Sort\" }\r\n];\r\n\r\nexport const initialOrdersList = [\r\n  { _id: 0, name: \"Random\" },\r\n  { _id: 1, name: \"Reversed\" },\r\n  { _id: 2, name: \"Nearly Sorted\" }\r\n];\r\n","import React from \"react\";\r\nimport ActionButton from \"./actionButton\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport { initialOrdersList } from \"./../Util/algorithmsLists\";\r\n\r\nconst ArrayControlBar = ({\r\n  arrayLength,\r\n  generateNewArray,\r\n  changeArrayLength,\r\n  recoverArray,\r\n  changeArrayInitialOrder\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Input\r\n        name=\"length\"\r\n        label=\"Array Length\"\r\n        value={arrayLength}\r\n        style={{ width: 100 }}\r\n        onChange={changeArrayLength}\r\n      />\r\n      <Select\r\n        name=\"initialOrder\"\r\n        label=\"Array Initial Order\"\r\n        options={initialOrdersList}\r\n        style={{ width: 300 }}\r\n        onChange={changeArrayInitialOrder}\r\n      />\r\n      <ActionButton\r\n        label=\"Generate New Array\"\r\n        handleClick={generateNewArray}\r\n        style={{ marginTop: 5 }}\r\n      />\r\n      <ActionButton\r\n        label=\"Recover Array\"\r\n        handleClick={recoverArray}\r\n        style={{ marginTop: 5, marginLeft: 5 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayControlBar;\r\n","import React from \"react\";\r\nimport ActionButton from \"./actionButton\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport { sortAlgorithmsList } from \"../Util/algorithmsLists\";\r\n\r\nconst SortControlBar = ({\r\n  sortInterval,\r\n  handleSortStart,\r\n  changeSortInterval,\r\n  changeSortAlgorithm\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Input\r\n        name=\"sortInterval\"\r\n        label=\"Sort Interval\"\r\n        value={sortInterval}\r\n        style={{ width: 100 }}\r\n        onChange={changeSortInterval}\r\n      />\r\n      <Select\r\n        name=\"sortAlgorithm\"\r\n        label=\"Sort Algorithm\"\r\n        options={sortAlgorithmsList}\r\n        style={{ width: 300 }}\r\n        onChange={changeSortAlgorithm}\r\n      />\r\n      <ActionButton label=\"Sort\" handleClick={handleSortStart} style={{ marginTop: 5 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortControlBar;\r\n","export default function random(length, min, max) {\r\n  let values = [];\r\n  while (length--) {\r\n    values.push({\r\n      value: Math.floor(Math.random() * (max - min)) + min,\r\n      isInComparison: false,\r\n      isInSwap: false\r\n    });\r\n  }\r\n  return values;\r\n}\r\n","import random from \"./random\";\r\n\r\nexport default function reversed(length, min, max) {\r\n  let values = random(length, min, max);\r\n  values.sort(function(a, b) {\r\n    return b.value - a.value;\r\n  });\r\n  return values;\r\n}\r\n","import random from \"./random\";\r\nimport shuffleArray from \"./../../shuffleArray\";\r\n\r\nexport default function nearlySorted(length, min, max) {\r\n  let values = random(length, min, max);\r\n  values.sort(function(a, b) {\r\n    return a.value - b.value;\r\n  });\r\n\r\n  return shuffleArray(values, 0.15);\r\n}\r\n","export default function shuffleArray(arr, prob) {\r\n  const length = arr.length;\r\n  for (var i = 0; i < length; i++) {\r\n    const randProb = Math.random();\r\n    if (randProb <= prob) {\r\n      const randIndex = Math.floor(Math.random() * (length - 1 - i)) + i;\r\n      [arr[i], arr[randIndex]] = [arr[randIndex], arr[i]];\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n","import random from \"./Algorithms/Generator/random\";\r\nimport reversed from \"./Algorithms/Generator/reversed\";\r\nimport nearlySorted from \"./Algorithms/Generator/nearlySorted\";\r\n\r\nexport default function generateElements(length, initialOrder, min = 5, max = 400) {\r\n  if (initialOrder === \"Random\") return random(length, min, max);\r\n  if (initialOrder === \"Reversed\") return reversed(length, min, max);\r\n  if (initialOrder === \"Nearly Sorted\") return nearlySorted(length, min, max);\r\n}\r\n","export default function getSortStep(originalArr, operation, elementsInOperation) {\r\n  const arr = JSON.parse(JSON.stringify(originalArr));\r\n\r\n  elementsInOperation.forEach(id => {\r\n    if (operation === \"compare\") arr[id].isInComparison = true;\r\n    else arr[id].isInSwap = true;\r\n  });\r\n\r\n  return arr;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nclass MergeSortArray {\r\n  constructor(arr) {\r\n    this.arr = arr;\r\n    this.sortSteps = [];\r\n  }\r\n\r\n  merge = function(st1, en1, st2, en2) {\r\n    const arr = this.arr;\r\n    let swapIds = [];\r\n    let mergeArr = [...arr];\r\n    let id = st1;\r\n    let id1 = st1;\r\n    let id2 = st2;\r\n\r\n    for (var i = st1; i <= en2; i++) swapIds.push(i);\r\n\r\n    while (id1 <= en1 && id2 <= en2) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id1, id2]));\r\n      if (arr[id1].value <= arr[id2].value) mergeArr[id++] = arr[id1++];\r\n      else mergeArr[id++] = arr[id2++];\r\n    }\r\n    while (id1 <= en1) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id1]));\r\n      mergeArr[id++] = arr[id1++];\r\n    }\r\n    while (id2 <= en2) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id2]));\r\n      mergeArr[id++] = arr[id2++];\r\n    }\r\n\r\n    this.arr = [...mergeArr];\r\n    this.sortSteps.push(getSortStep(this.arr, \"sort\", swapIds));\r\n  };\r\n\r\n  mergeSort = function(st, en) {\r\n    const mid = Math.floor((st + en) / 2);\r\n    if (st < en) {\r\n      this.mergeSort(st, mid);\r\n      this.mergeSort(mid + 1, en);\r\n      this.merge(st, mid, mid + 1, en);\r\n    }\r\n  };\r\n}\r\n\r\nexport default function mergeSort(arr) {\r\n  const mergeArr = new MergeSortArray(arr);\r\n  mergeArr.mergeSort(0, arr.length - 1);\r\n  return [...mergeArr.sortSteps, mergeArr.arr];\r\n}\r\n","import bubbleSort from \"./Algorithms/Sorting/bubbleSort\";\r\nimport selectionSort from \"./Algorithms/Sorting/selectionSort\";\r\nimport mergeSort from \"./Algorithms/Sorting/mergeSort\";\r\nimport insertionSort from './Algorithms/Sorting/insertionSort';\r\n\r\nexport default function sortWithSteps(arr, algorithm) {\r\n  switch (algorithm) {\r\n    case \"Bubble Sort\":\r\n      return bubbleSort(arr);\r\n    case \"Selection Sort\":\r\n      return selectionSort(arr);\r\n    case \"Merge Sort\":\r\n      return mergeSort(arr);\r\n    case \"Insertion Sort\":\r\n      return insertionSort(arr);\r\n    default:\r\n      return arr;\r\n  }\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function bubbleSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n\r\n  for (var i = 0; i < length - 1; i++) {\r\n    for (var j = 0; j < length - i - 1; j++) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [j, j + 1]));\r\n      if (arr[j + 1].value < arr[j].value) {\r\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\r\n        sortSteps.push(getSortStep(arr, \"swap\", [j, j + 1]));\r\n      }\r\n    }\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function selectionSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n  let minIndex;\r\n\r\n  for (var i = 0; i < length - 1; i++) {\r\n    minIndex = i;\r\n    for (var j = i + 1; j < length; j++) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [minIndex, j]));\r\n      if (arr[j].value < arr[minIndex].value) minIndex = j;\r\n    }\r\n    [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]];\r\n    sortSteps.push(getSortStep(arr, \"swap\", [i, minIndex]));\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function insertionSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n\r\n  for (var i = 1; i < length; i++) {\r\n    let swapIds = [];\r\n    let j = i - 1;\r\n    const toInsert = arr[i];\r\n    swapIds.push(i);\r\n\r\n    while (j >= 0) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [i, j]));\r\n      if (arr[j].value <= toInsert.value) break;\r\n      swapIds.push(j);\r\n      j--;\r\n    }\r\n    j = i - 1;\r\n    while (j >= 0 && arr[j].value > toInsert.value) arr[j + 1] = arr[j--];\r\n    arr[j + 1] = toInsert;\r\n\r\n    sortSteps.push(getSortStep(arr, \"sort\", swapIds));\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ArrayVisualizer from \"./components/arrayVisualizer\";\r\nimport ArrayControlBar from \"./components/arrayControlBar\";\r\nimport SortControlBar from \"./components/sortControlBar\";\r\nimport generateElements from \"./Util/generateElements\";\r\nimport sortWithSteps from \"./Util/sortWithSteps\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    array: {\r\n      elements: [],\r\n      sortSteps: [],\r\n      currentStepId: 0,\r\n      status: \"\",\r\n      length: 0,\r\n      initialOrder: \"\"\r\n    },\r\n    sortInterval: 0,\r\n    sortAlgorithm: \"\"\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const length = 50;\r\n    const initialOrder = \"Random\";\r\n    const arrayElements = generateElements(length, initialOrder);\r\n    this.state = {\r\n      array: {\r\n        elements: arrayElements,\r\n        status: \"unsorted\",\r\n        currentStepId: 0,\r\n        sortSteps: [arrayElements],\r\n        length,\r\n        initialOrder\r\n      },\r\n      sortInterval: 50,\r\n      sortAlgorithm: \"Bubble Sort\"\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    clearInterval(this.sortInterval);\r\n    if (this.state.array.status === \"sorting\")\r\n      this.sortInterval = setInterval(() => {\r\n        this.handleStatusUpdate();\r\n      }, this.state.sortInterval);\r\n  }\r\n\r\n  updateArrayState = arrayState => {\r\n    const array = { ...this.state.array };\r\n    Object.keys(arrayState).forEach(key => (array[key] = arrayState[key]));\r\n    this.setState({ array });\r\n  };\r\n\r\n  handleStatusUpdate = () => {\r\n    let { sortSteps, currentStepId, status } = this.state.array;\r\n    if (currentStepId + 1 === sortSteps.length) {\r\n      status = \"sorted\";\r\n    } else currentStepId++;\r\n\r\n    this.updateArrayState({ status, currentStepId });\r\n  };\r\n\r\n  handleSortStart = () => {\r\n    const { elements, status } = this.state.array;\r\n    if (status === \"unsorted\") {\r\n      const sortSteps = [elements, ...sortWithSteps([...elements], this.state.sortAlgorithm)];\r\n      this.updateArrayState({ status: \"sorting\", sortSteps });\r\n    }\r\n  };\r\n\r\n  recoverArray = () => {\r\n    const array = { ...this.state.array };\r\n    array.status = \"unsorted\";\r\n    array.currentStepId = 0;\r\n    this.setState({ array });\r\n  };\r\n\r\n  generateNewArray = () => {\r\n    let array = { ...this.state.array };\r\n    const { length, initialOrder } = array;\r\n    const arrayElements = generateElements(length, initialOrder);\r\n    array = {\r\n      elements: arrayElements,\r\n      status: \"unsorted\",\r\n      currentStepId: 0,\r\n      sortSteps: [arrayElements],\r\n      length,\r\n      initialOrder\r\n    };\r\n    this.setState({ array });\r\n  };\r\n\r\n  changeArrayProp = ({ currentTarget: input }) => {\r\n    const array = { ...this.state.array };\r\n    array[input.name] = input.value;\r\n    this.setState({ array });\r\n  };\r\n\r\n  changeSortProp = ({ currentTarget: input }) => {\r\n    const state = { ...this.state };\r\n    state[input.name] = input.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    const { sortInterval, sortAlgorithm, array } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Sorting Algorithms Visualizer</h1>\r\n        <ArrayVisualizer\r\n          sortInterval={sortInterval}\r\n          sortAlgorithm={sortAlgorithm}\r\n          elements={array.sortSteps[array.currentStepId]}\r\n        />\r\n        <ArrayControlBar\r\n          generateNewArray={this.generateNewArray}\r\n          arrayLength={array.length}\r\n          changeArrayLength={this.changeArrayProp}\r\n          recoverArray={this.recoverArray}\r\n          changeArrayInitialOrder={this.changeArrayProp}\r\n        />\r\n        <SortControlBar\r\n          handleSortStart={this.handleSortStart}\r\n          sortInterval={sortInterval}\r\n          changeSortInterval={this.changeSortProp}\r\n          changeSortAlgorithm={this.changeSortProp}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}