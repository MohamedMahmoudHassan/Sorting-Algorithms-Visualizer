{"version":3,"sources":["components/bar.jsx","Util/generateRandomElements.js","components/array.jsx","Util/Algorithms/selectionSort.js","App.js","index.js"],"names":["Bar","element","criticalValue","colorsSchema","style","width","height","value","borderWidth","borderStyle","marginTop","marginLeft","textAlign","backgroundColor","isInCompare","isInSwap","generateRandomElements","length","values","push","Math","floor","random","isInComparison","Array","props","state","elements","sortSteps","status","applyStepEffect","type","clearStepEffect","handleStatusUpdate","prevStatus","prevStep","currentStep","currentStatus","el1","el2","id","stepsList","setState","handleClick","arr","minIndex","c","i","j","selectionSort","this","prevProps","prevState","clearInterval","sortInterval","setInterval","className","onClick","map","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d365a57c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Bar = ({ element, criticalValue }) => {\r\n  const colorsSchema = {\r\n    normal: \"#D5B588\",\r\n    isInCompare: \"#CA625A\",\r\n    isInSwap: \"#39274C\"\r\n  }\r\n\r\n  const style = {\r\n    width: 17,\r\n    height: element.value,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    marginTop: criticalValue - element.value,\r\n    marginLeft: 2,\r\n    textAlign: \"center\",\r\n    backgroundColor:\r\n      element.isInCompare === true\r\n        ? colorsSchema.isInCompare\r\n        : element.isInSwap === true\r\n        ? colorsSchema.isInSwap\r\n        : colorsSchema.normal\r\n  };\r\n\r\n  return <div style={style}></div>;\r\n};\r\n\r\nexport default Bar;\r\n","export default function generateRandomElements(length) {\r\n  let values = [];\r\n  while (length--) {\r\n    values.push({\r\n      value: Math.floor(Math.random(1) * 200 + 40),\r\n      isInComparison: false,\r\n      isInSwap: false\r\n    });\r\n  }\r\n  return values;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Bar from \"./bar\";\r\nimport generateRandomElements from \"../Util/generateRandomElements\";\r\nimport immediateSort from \"./../Util/Algorithms/immediateSort\";\r\nimport bubbleSort from \"./../Util/Algorithms/bubbleSort\";\r\nimport selectionSort from \"./../Util/Algorithms/selectionSort\";\r\n\r\nclass Array extends Component {\r\n  state = { elements: [], sortSteps: {}, status: {} };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elements: generateRandomElements(50),\r\n      status: \"unsorted\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const stepsList = selectionSort([...this.state.elements]);\r\n    const sortSteps = {\r\n      stepsList,\r\n      currentStep: stepsList[0]\r\n    };\r\n    this.setState({ sortSteps });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    clearInterval(this.sortInterval);\r\n    if (this.state.status === \"unsorted\" || prevState.status === \"sorted\")\r\n      return;\r\n\r\n    this.sortInterval = setInterval(() => {\r\n      this.handleStatusUpdate(\r\n        prevState.status,\r\n        prevState.sortSteps.currentStep\r\n      );\r\n    }, 1);\r\n  }\r\n\r\n  applyStepEffect = (elements, type) => {\r\n    if (type === \"swap\") {\r\n      [elements[0], elements[1]] = [elements[1], elements[0]];\r\n      elements[0].isInSwap = elements[1].isInSwap = true;\r\n    } else elements[0].isInCompare = elements[1].isInCompare = true;\r\n    return elements;\r\n  };\r\n\r\n  clearStepEffect = elements => {\r\n    elements[0].isInCompare = elements[1].isInCompare = false;\r\n    elements[0].isInSwap = elements[1].isInSwap = false;\r\n    return elements;\r\n  };\r\n\r\n  handleStatusUpdate = (prevStatus, prevStep) => {\r\n    const elements = [...this.state.elements];\r\n    const sortSteps = { ...this.state.sortSteps };\r\n    let { currentStep } = sortSteps;\r\n    let currentStatus = this.state.status;\r\n\r\n    if (prevStatus === \"sorting\")\r\n      [elements[prevStep.el1], elements[prevStep.el2]] = this.clearStepEffect([\r\n        elements[prevStep.el1],\r\n        elements[prevStep.el2]\r\n      ]);\r\n\r\n    if (currentStatus === \"sorting\") {\r\n      [\r\n        elements[currentStep.el1],\r\n        elements[currentStep.el2]\r\n      ] = this.applyStepEffect(\r\n        [elements[currentStep.el1], elements[currentStep.el2]],\r\n        currentStep.type\r\n      );\r\n\r\n      if (currentStep.id + 1 === sortSteps.stepsList.length) {\r\n        currentStep = {};\r\n        currentStatus = \"sorted\";\r\n      } else currentStep = sortSteps.stepsList[currentStep.id + 1];\r\n\r\n      sortSteps.currentStep = currentStep;\r\n    }\r\n\r\n    this.setState({ elements, status: currentStatus, sortSteps });\r\n  };\r\n\r\n  style = {\r\n    width: 1000,\r\n    height: 300,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\"\r\n  };\r\n\r\n  handleClick = () => {\r\n    const status = this.state.status;\r\n    if (status === \"unsorted\") this.setState({ status: \"sorting\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\" style={this.style} onClick={this.handleClick}>\r\n        {this.state.elements.map(element => (\r\n          <Bar criticalValue={300} element={element} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Array;\r\n","export default function selectionSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n  let c = 0;\r\n  let minIndex;\r\n\r\n  for (var i = 0; i < length - 1; i++) {\r\n    minIndex = i;\r\n    for (var j = i + 1; j < length; j++) {\r\n      sortSteps.push({ id: c++, el1: minIndex, el2: j, type: \"compare\" });\r\n      if (arr[j].value < arr[minIndex].value) minIndex = j;\r\n    }\r\n    [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]];\r\n    sortSteps.push({ id: c++, el1: i, el2: minIndex, type: \"swap\" });\r\n  }\r\n  return sortSteps;\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Array from \"./components/array\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Sorting Algorithms Visualizer</h1>\r\n      <Array />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}