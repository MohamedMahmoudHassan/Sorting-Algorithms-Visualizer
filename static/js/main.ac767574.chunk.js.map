{"version":3,"sources":["components/arrayBar.jsx","components/arrayVisualizer.jsx","components/navBar.jsx","components/actionButton.jsx","components/input.jsx","components/select.jsx","Util/algorithmsLists.js","components/arrayControlBar.jsx","components/sortControlBar.jsx","components/controlBar.jsx","Util/Algorithms/Generator/random.js","Util/Algorithms/Generator/reversed.js","Util/Algorithms/Generator/nearlySorted.js","Util/shuffleArray.js","Util/generateElements.js","Util/getSortStep.js","Util/Algorithms/Sorting/mergeSort.js","Util/sortWithSteps.js","Util/Algorithms/Sorting/bubbleSort.js","Util/Algorithms/Sorting/selectionSort.js","Util/Algorithms/Sorting/insertionSort.js","Util/Algorithms/Sorting/heapSort.js","App.js","index.js"],"names":["ArrayBar","element","maxValue","barsNumber","colorsSchema","style","width","Math","max","height","value","marginTop","marginLeft","textAlign","backgroundColor","isInComparison","isInSwap","ArrayVisualizer","onClick","elements","className","margin","map","index","length","key","NavBar","fontSize","ActionButton","handleClick","label","isSorting","rest","disabled","Input","name","error","id","Select","options","currentOption","onChange","item","type","checked","htmlFor","sortAlgorithmsList","_id","initialOrdersList","ArrayControlBar","arrayLength","generateNewArray","changeArrayLength","changeArrayInitialOrder","SortControlBar","handleSortStart","changeSortAlgorithm","ControlBar","recoverArray","currentOrder","currentAlgorithm","random","min","values","push","floor","reversed","sort","a","b","nearlySorted","arr","prob","i","randIndex","shuffleArray","generateElements","initialOrder","getSortStep","originalArr","operation","elementsInOperation","JSON","parse","stringify","forEach","MergeSortArray","merge","st1","en1","st2","en2","this","swapIds","mergeArr","id1","id2","sortSteps","mergeSort","st","en","mid","sortWithSteps","algorithm","j","bubbleSort","minIndex","selectionSort","toInsert","insertionSort","heapSort","App","state","array","currentStepId","status","sortInterval","sortAlgorithm","updateArrayState","arrayState","Object","keys","setState","handleStatusUpdate","arrayElements","changeArrayProp","input","currentTarget","changeSortProp","clearInterval","setInterval","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac767574.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ArrayBar = ({ element, maxValue, barsNumber }) => {\r\n  const colorsSchema = {\r\n    normal: \"#f5365c\",\r\n    isInComparison: \"#32325d\",\r\n    isInSwap: \"#2dce89\"\r\n  };\r\n  // const colorsSchema = {\r\n  //   normal: \"#F8B530\",\r\n  //   isInComparison: \"#68CBD0\",\r\n  //   isInSwap: \"#08872C\"\r\n  // };\r\n\r\n  const style = {\r\n    width: 950 / Math.max(barsNumber, 8) - 2,\r\n    height: element.value,\r\n    marginTop: maxValue - element.value - 3,\r\n    marginLeft: 2,\r\n    textAlign: \"center\",\r\n    backgroundColor:\r\n      element.isInComparison === true\r\n        ? colorsSchema.isInComparison\r\n        : element.isInSwap === true\r\n        ? colorsSchema.isInSwap\r\n        : colorsSchema.normal\r\n  };\r\n\r\n  return <div style={style} />;\r\n};\r\n\r\nexport default ArrayBar;\r\n","import React from \"react\";\r\nimport ArrayBar from \"./arrayBar\";\r\n\r\nconst ArrayVisualizer = ({ onClick, elements }) => {\r\n  const style = {\r\n    height: 500,\r\n    margin: \"auto\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\" style={style} onClick={onClick}>\r\n      <div className=\"row\" style={{ margin: \"auto\" }}>\r\n        {elements.map((element, index) => (\r\n          <ArrayBar maxValue={500} element={element} barsNumber={elements.length} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayVisualizer;\r\n","import React from \"react\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar-dark bg-default navbar navbar-expand-lg\">\r\n        <div className=\"navbar-brand\" style={{ fontSize: 20, margin:\"auto\" }}>\r\n          Sorting Algorithms Visualizer\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst ActionButton = ({ handleClick, label, isSorting, ...rest }) => {\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <button className=\"btn btn-primary\" onClick={handleClick} {...rest} disabled={isSorting}>\r\n        {label}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ label, name, error, isSorting, ...rest }) => {\r\n  return (\r\n    <div className=\"col-sm-6 col-lg-2\">\r\n      <div className=\"mb-2\">\r\n        <small className=\"text-uppercase font-weight-bold\">{label}</small>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          className=\"form-control-alternative form-control\"\r\n          {...rest}\r\n          name={name}\r\n          id={name}\r\n          key={name}\r\n          disabled={isSorting}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, currentOption, onChange, isSorting }) => {\r\n  return (\r\n    <div className=\"mt-4 mt-md-0 col-md-auto\">\r\n      <div className=\"mb-3\">\r\n        <small className=\"text-uppercase font-weight-bold\">{label}</small>\r\n      </div>\r\n      {options.map(item => (\r\n        <div className=\"custom-control custom-control-inline custom-radio mb-3\" key={item.name}>\r\n          <input\r\n            className=\"custom-control-input\"\r\n            id={item.name}\r\n            value={item.name}\r\n            name={name}\r\n            type=\"radio\"\r\n            checked={item.name === currentOption}\r\n            onChange={onChange}\r\n            disabled={isSorting || item.disabled}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor={item.name}>\r\n            {item.name}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","export const sortAlgorithmsList = [\r\n  { _id: 0, name: \"Bubble Sort\" },\r\n  { _id: 1, name: \"Selection Sort\" },\r\n  { _id: 2, name: \"Insertion Sort\" },\r\n  { _id: 3, name: \"Merge Sort\" },\r\n  { _id: 4, name: \"Quick Sort\", disabled: true },\r\n  { _id: 5, name: \"Heap Sort\", disabled: true }\r\n];\r\n\r\nexport const initialOrdersList = [\r\n  { _id: 0, name: \"Random\" },\r\n  { _id: 1, name: \"Reversed\" },\r\n  { _id: 2, name: \"Nearly Sorted\" }\r\n];\r\n","import React from \"react\";\r\nimport ActionButton from \"./actionButton\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport { initialOrdersList } from \"./../Util/algorithmsLists\";\r\n\r\nconst ArrayControlBar = ({\r\n  arrayLength,\r\n  generateNewArray,\r\n  changeArrayLength,\r\n  changeArrayInitialOrder,\r\n  currentOption,\r\n  isSorting\r\n}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <Input name=\"length\" label=\"Array Length\" value={arrayLength} onChange={changeArrayLength} />\r\n      <Select\r\n        name=\"initialOrder\"\r\n        label=\"Array Initial Order\"\r\n        options={initialOrdersList}\r\n        onChange={changeArrayInitialOrder}\r\n        currentOption={currentOption}\r\n        isSorting={isSorting}\r\n      />\r\n      <ActionButton\r\n        label=\"Generate New Array\"\r\n        handleClick={generateNewArray}\r\n        isSorting={isSorting}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayControlBar;\r\n","import React from \"react\";\r\nimport ActionButton from \"./actionButton\";\r\nimport Select from \"./select\";\r\nimport { sortAlgorithmsList } from \"../Util/algorithmsLists\";\r\n\r\nconst SortControlBar = ({ handleSortStart, changeSortAlgorithm, currentOption, isSorting }) => {\r\n  return (\r\n    <div className=\"row\" style={{ marginTop: 20 }}>\r\n      <Select\r\n        name=\"sortAlgorithm\"\r\n        label=\"Sort Algorithm\"\r\n        options={sortAlgorithmsList}\r\n        onChange={changeSortAlgorithm}\r\n        currentOption={currentOption}\r\n        isSorting={isSorting}\r\n      />\r\n      <ActionButton label=\"Sort\" handleClick={handleSortStart} isSorting={isSorting} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortControlBar;\r\n","import React from \"react\";\r\nimport ArrayControlBar from \"./arrayControlBar\";\r\nimport SortControlBar from \"./sortControlBar\";\r\n\r\nconst ControlBar = ({\r\n  generateNewArray,\r\n  arrayLength,\r\n  changeArrayLength,\r\n  recoverArray,\r\n  changeArrayInitialOrder,\r\n  currentOrder,\r\n  handleSortStart,\r\n  changeSortAlgorithm,\r\n  currentAlgorithm,\r\n  isSorting\r\n}) => {\r\n  return (\r\n    <div className=\"py-5 bg-secondary\">\r\n      <div className=\"container\">\r\n        <ArrayControlBar\r\n          generateNewArray={generateNewArray}\r\n          arrayLength={arrayLength}\r\n          changeArrayLength={changeArrayLength}\r\n          recoverArray={recoverArray}\r\n          changeArrayInitialOrder={changeArrayInitialOrder}\r\n          currentOption={currentOrder}\r\n          isSorting={isSorting}\r\n        />\r\n        <SortControlBar\r\n          handleSortStart={handleSortStart}\r\n          changeSortAlgorithm={changeSortAlgorithm}\r\n          currentOption={currentAlgorithm}\r\n          isSorting={isSorting}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlBar;\r\n","export default function random(length, min, max) {\r\n  let values = [];\r\n  while (length--) {\r\n    values.push({\r\n      value: Math.floor(Math.random() * (max - min)) + min,\r\n      isInComparison: false,\r\n      isInSwap: false\r\n    });\r\n  }\r\n  return values;\r\n}\r\n","import random from \"./random\";\r\n\r\nexport default function reversed(length, min, max) {\r\n  let values = random(length, min, max);\r\n  values.sort(function(a, b) {\r\n    return b.value - a.value;\r\n  });\r\n  return values;\r\n}\r\n","import random from \"./random\";\r\nimport shuffleArray from \"./../../shuffleArray\";\r\n\r\nexport default function nearlySorted(length, min, max) {\r\n  let values = random(length, min, max);\r\n  values.sort(function(a, b) {\r\n    return a.value - b.value;\r\n  });\r\n\r\n  return shuffleArray(values, 0.15);\r\n}\r\n","export default function shuffleArray(arr, prob) {\r\n  const length = arr.length;\r\n  for (var i = 0; i < length; i++) {\r\n    const randProb = Math.random();\r\n    if (randProb <= prob) {\r\n      const randIndex = Math.floor(Math.random() * (length - 1 - i)) + i;\r\n      [arr[i], arr[randIndex]] = [arr[randIndex], arr[i]];\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n","import random from \"./Algorithms/Generator/random\";\r\nimport reversed from \"./Algorithms/Generator/reversed\";\r\nimport nearlySorted from \"./Algorithms/Generator/nearlySorted\";\r\n\r\nexport default function generateElements(length, initialOrder, min = 5, max = 400) {\r\n  if (initialOrder === \"Random\") return random(length, min, max);\r\n  if (initialOrder === \"Reversed\") return reversed(length, min, max);\r\n  if (initialOrder === \"Nearly Sorted\") return nearlySorted(length, min, max);\r\n}\r\n","export default function getSortStep(originalArr, operation, elementsInOperation) {\r\n  const arr = JSON.parse(JSON.stringify(originalArr));\r\n\r\n  elementsInOperation.forEach(id => {\r\n    if (operation === \"compare\") arr[id].isInComparison = true;\r\n    else arr[id].isInSwap = true;\r\n  });\r\n\r\n  return arr;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nclass MergeSortArray {\r\n  constructor(arr) {\r\n    this.arr = arr;\r\n    this.sortSteps = [];\r\n  }\r\n\r\n  merge = function(st1, en1, st2, en2) {\r\n    const arr = this.arr;\r\n    let swapIds = [];\r\n    let mergeArr = [...arr];\r\n    let id = st1;\r\n    let id1 = st1;\r\n    let id2 = st2;\r\n\r\n    for (var i = st1; i <= en2; i++) swapIds.push(i);\r\n\r\n    while (id1 <= en1 && id2 <= en2) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id1, id2]));\r\n      if (arr[id1].value <= arr[id2].value) mergeArr[id++] = arr[id1++];\r\n      else mergeArr[id++] = arr[id2++];\r\n    }\r\n    while (id1 <= en1) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id1]));\r\n      mergeArr[id++] = arr[id1++];\r\n    }\r\n    while (id2 <= en2) {\r\n      this.sortSteps.push(getSortStep(arr, \"compare\", [id2]));\r\n      mergeArr[id++] = arr[id2++];\r\n    }\r\n\r\n    this.arr = [...mergeArr];\r\n    this.sortSteps.push(getSortStep(this.arr, \"sort\", swapIds));\r\n  };\r\n\r\n  mergeSort = function(st, en) {\r\n    const mid = Math.floor((st + en) / 2);\r\n    if (st < en) {\r\n      this.mergeSort(st, mid);\r\n      this.mergeSort(mid + 1, en);\r\n      this.merge(st, mid, mid + 1, en);\r\n    }\r\n  };\r\n}\r\n\r\nexport default function mergeSort(arr) {\r\n  const mergeArr = new MergeSortArray(arr);\r\n  mergeArr.mergeSort(0, arr.length - 1);\r\n  return [...mergeArr.sortSteps, mergeArr.arr];\r\n}\r\n","import bubbleSort from \"./Algorithms/Sorting/bubbleSort\";\r\nimport selectionSort from \"./Algorithms/Sorting/selectionSort\";\r\nimport mergeSort from \"./Algorithms/Sorting/mergeSort\";\r\nimport insertionSort from \"./Algorithms/Sorting/insertionSort\";\r\nimport quickSort from \"./Algorithms/Sorting/quickSort\";\r\nimport heapSort from \"./Algorithms/Sorting/heapSort\";\r\n\r\nexport default function sortWithSteps(arr, algorithm) {\r\n  switch (algorithm) {\r\n    case \"Bubble Sort\":\r\n      return bubbleSort(arr);\r\n    case \"Selection Sort\":\r\n      return selectionSort(arr);\r\n    case \"Insertion Sort\":\r\n      return insertionSort(arr);\r\n    case \"Merge Sort\":\r\n      return mergeSort(arr);\r\n    case \"Quick Sort\":\r\n      return quickSort(arr);\r\n    case \"Heap Sort\":\r\n      return heapSort(arr);\r\n    default:\r\n      return arr;\r\n  }\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function bubbleSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n\r\n  for (var i = 0; i < length - 1; i++) {\r\n    for (var j = 0; j < length - i - 1; j++) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [j, j + 1]));\r\n      if (arr[j + 1].value < arr[j].value) {\r\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\r\n        sortSteps.push(getSortStep(arr, \"swap\", [j, j + 1]));\r\n      }\r\n    }\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function selectionSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n  let minIndex;\r\n\r\n  for (var i = 0; i < length - 1; i++) {\r\n    minIndex = i;\r\n    for (var j = i + 1; j < length; j++) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [minIndex, j]));\r\n      if (arr[j].value < arr[minIndex].value) minIndex = j;\r\n    }\r\n    [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]];\r\n    sortSteps.push(getSortStep(arr, \"swap\", [i, minIndex]));\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","import getSortStep from \"../../getSortStep\";\r\n\r\nexport default function insertionSort(arr) {\r\n  let sortSteps = [];\r\n  const length = arr.length;\r\n\r\n  for (var i = 1; i < length; i++) {\r\n    let swapIds = [];\r\n    let j = i - 1;\r\n    const toInsert = arr[i];\r\n    swapIds.push(i);\r\n\r\n    while (j >= 0) {\r\n      sortSteps.push(getSortStep(arr, \"compare\", [i, j]));\r\n      if (arr[j].value <= toInsert.value) break;\r\n      swapIds.push(j);\r\n      j--;\r\n    }\r\n    j = i - 1;\r\n    while (j >= 0 && arr[j].value > toInsert.value) arr[j + 1] = arr[j--];\r\n    arr[j + 1] = toInsert;\r\n\r\n    sortSteps.push(getSortStep(arr, \"sort\", swapIds));\r\n  }\r\n\r\n  sortSteps.push(arr);\r\n  return sortSteps;\r\n}\r\n","export default function heapSort(arr) {\r\n  return [arr];\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ArrayVisualizer from \"./components/arrayVisualizer\";\r\nimport NavBar from \"./components/navBar\";\r\nimport ControlBar from \"./components/controlBar\";\r\nimport generateElements from \"./Util/generateElements\";\r\nimport sortWithSteps from \"./Util/sortWithSteps\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    array: {\r\n      elements: [],\r\n      sortSteps: [],\r\n      currentStepId: 0,\r\n      status: \"\",\r\n      length: 0,\r\n      initialOrder: \"\"\r\n    },\r\n    sortInterval: 0,\r\n    sortAlgorithm: \"\"\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const length = 50;\r\n    const initialOrder = \"Random\";\r\n    const arrayElements = generateElements(length, initialOrder);\r\n    this.state = {\r\n      array: {\r\n        elements: arrayElements,\r\n        status: \"unsorted\",\r\n        currentStepId: 0,\r\n        sortSteps: [arrayElements],\r\n        length,\r\n        initialOrder\r\n      },\r\n      sortInterval: 100,\r\n      sortAlgorithm: \"Bubble Sort\"\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    clearInterval(this.sortInterval);\r\n    if (this.state.array.status === \"sorting\")\r\n      this.sortInterval = setInterval(() => {\r\n        this.handleStatusUpdate();\r\n      }, this.state.sortInterval);\r\n  }\r\n\r\n  updateArrayState = arrayState => {\r\n    const array = { ...this.state.array };\r\n    Object.keys(arrayState).forEach(key => (array[key] = arrayState[key]));\r\n    this.setState({ array });\r\n  };\r\n\r\n  handleStatusUpdate = () => {\r\n    let { sortSteps, currentStepId, status } = this.state.array;\r\n    if (currentStepId + 1 === sortSteps.length) {\r\n      status = \"sorted\";\r\n    } else currentStepId++;\r\n\r\n    this.updateArrayState({ status, currentStepId });\r\n  };\r\n\r\n  handleSortStart = () => {\r\n    const { elements, status } = this.state.array;\r\n    if (status === \"unsorted\") {\r\n      const sortSteps = [elements, ...sortWithSteps([...elements], this.state.sortAlgorithm)];\r\n      this.updateArrayState({ status: \"sorting\", sortSteps });\r\n    }\r\n  };\r\n\r\n  recoverArray = () => {\r\n    const array = { ...this.state.array };\r\n    array.status = \"unsorted\";\r\n    array.currentStepId = 0;\r\n    this.setState({ array });\r\n  };\r\n\r\n  generateNewArray = () => {\r\n    let array = { ...this.state.array };\r\n    const { length, initialOrder } = array;\r\n    const arrayElements = generateElements(length, initialOrder);\r\n    array = {\r\n      elements: arrayElements,\r\n      status: \"unsorted\",\r\n      currentStepId: 0,\r\n      sortSteps: [arrayElements],\r\n      length,\r\n      initialOrder\r\n    };\r\n    this.setState({ array });\r\n  };\r\n\r\n  changeArrayProp = ({ currentTarget: input }) => {\r\n    const array = { ...this.state.array };\r\n    array[input.name] = input.value;\r\n    this.setState({ array });\r\n  };\r\n\r\n  changeSortProp = ({ currentTarget: input }) => {\r\n    const state = { ...this.state };\r\n    state[input.name] = input.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    const { sortInterval, sortAlgorithm, array } = this.state;\r\n    const { initialOrder } = array;\r\n    const isSorting = this.state.array.status === \"sorting\";\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <ArrayVisualizer\r\n          sortInterval={sortInterval}\r\n          sortAlgorithm={sortAlgorithm}\r\n          elements={array.sortSteps[array.currentStepId]}\r\n        />\r\n        <ControlBar\r\n          generateNewArray={this.generateNewArray}\r\n          arrayLength={array.length}\r\n          currentOrder={initialOrder}\r\n          changeArrayLength={this.changeArrayProp}\r\n          recoverArray={this.recoverArray}\r\n          changeArrayInitialOrder={this.changeArrayProp}\r\n          handleSortStart={this.handleSortStart}\r\n          changeSortAlgorithm={this.changeSortProp}\r\n          currentAlgorithm={sortAlgorithm}\r\n          isSorting={isSorting}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./assets/css/argon-design-system-react.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}